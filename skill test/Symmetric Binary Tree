Symmetric Binary Tree
Given a binary tree, check whether it is symmetric around its center at every level. That means, return true if the given binary tree and its mirror is exactly same. Otherwise return false.
Input Format :
Nodes in level order form (separated by space). If any node does not have left or right child, take -1 in its place. 
Output Format :
Return true or false.
Constraints :
1 <= Number of Nodes <= 10^5
Sample Input 1 :
1 2 3 4 5 6 7 -1 -1 -1 -1 -1 -1 -1 -1
Sample Output 1 :
false
Sample Input 2 :
1 2 2 3 4 4 3 -1 -1 -1 -1 -1 -1 -1 -1
Sample Output 2 :
true
Sample Input 3 :
1 2 2 -1 3 -1 3 -1 -1 -1 -1
Sample Output 3 :
false
*****************************************************
# Node class definition for binary tree
class Node:
    def __init__(self, data):
        self.data = data
        self.left = None
        self.right = None

# Function to check if two nodes are mirrors of each other
def isMirror(left, right):
    if left is None and right is None:
        return True
    if left is None or right is None:
        return False
    return (
        left.data == right.data
        and isMirror(left.left, right.right)
        and isMirror(left.right, right.left)
    )

# Function to check if a binary tree is symmetric
def isSymmetric(root):
    if root is None or (root.left is None and root.right is None):
        return True
    return isMirror(root.left, root.right)

# Main function
if __name__ == '__main__':
    nodes = list(map(int, input().split()))  # nodes in level order form
    root = Node(nodes[0])
    queue = [root]
    i = 1
    while i < len(nodes):
        node = queue.pop(0)
        if node is not None:
            left_data = nodes[i]
            if left_data != -1:
                node.left = Node(left_data)
            i += 1
            if i < len(nodes):
                right_data = nodes[i]
                if right_data != -1:
                    node.right = Node(right_data)
                i += 1
            queue.append(node.left)
            queue.append(node.right)
    if isSymmetric(root):
        print("true")
    else:
        print("false")
