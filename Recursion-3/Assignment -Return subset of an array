Return subset of an array
Send Feedback
Given an integer array (of length n), find and return all the subsets of input array.
Subsets are of length varying from 0 to n, that contain elements of the array. But the order of elements should remain same as in the input array.


Note : The order of subsets are not important.


Input format :

Line 1 : Size of array

Line 2 : Array elements (separated by space)

Sample Input:
3
15 20 12
Sample Output:
[] (this just represents an empty array, don't worry about the square brackets)
12 
20 
20 12 
15 
15 12 
15 20 
15 20 12 
************************
from math import *
from collections import *
from sys import *
from os import *

## Read input as specified in the question.
## Print output as specified in the question.
def findSubsets(arr):
    subsets = []
    helper(arr, [], subsets)
    return subsets

def helper(arr, curr_subset, subsets):
    subsets.append(curr_subset)
    if not arr:
        return
    for i in range(len(arr)):
        helper(arr[i+1:], curr_subset + [arr[i]], subsets)

# Input
n = int(input())
arr = list(map(int, input().split()))

# Find subsets
result = findSubsets(arr)

# Print subsets
for subset in result:
    print(' '.join(map(str, subset)))
