def down_heap(arr, i, n):
    parentIndex = i
    leftchildindex = 2*parentIndex+1
    rightchildindex = 2*parentIndex +2
    while leftchildindex < n:
        minIndex = parentIndex
        if arr[minIndex] > arr[leftchildindex]:
            minIndex = leftchildindex
        if rightchildindex < n and arr[minIndex] > arr[rightchildindex]:
            minIndex = rightchildindex
        if minIndex == parentIndex:
            return
        
        arr[minIndex], arr[parentIndex] = arr[parentIndex], arr[minIndex] 
        parentIndex = minIndex
        leftchildindex = 2*parentIndex+1
        rightChildIndex = 2*parentIndex+2
    return
        

def heafSort(arr):
    n = len(arr)
    for i in range(n//2 -1,-1,-1):
        down_heap(arr, i,n)
    for i in range(n-1,0,-1):
        arr[0], arr[i] = arr[i], arr[0]
        down_heap(arr, 0,i)
    return
        

arr = [int(ele) for ele in input().split()]
heafSort(arr)
for ele in arr:
    print(ele, end= " ")
